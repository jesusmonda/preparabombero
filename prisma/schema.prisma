generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String
  surname    String
  password   String   @unique
  role       UserRole @default(USER)
  ips        Ip[]
  subscribed Boolean @default(false)
  subscription_id String?
  cancellation_pending Boolean @default(false)
}

model Ip {
  id     Int    @id @default(autoincrement())
  ip     String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int
}

model Topic {
  id            Int     @id @default(autoincrement())
  title         String  @unique
  categoryTitle String?
  parent        Topic?  @relation("Topics", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentId      Int?
  topics        Topic[] @relation("Topics")
  quizzes       Quiz[]
  created_at    DateTime @default(now())
}

model Quiz {
  id      Int    @id @default(autoincrement())
  title   String @unique
  option1 String
  option2 String
  option3 String
  option4 String
  result  String
  topic   Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  topicId Int
  justification String
  reports Report[]
  created_at    DateTime @default(now())
}

model Report {
  id      Int    @id @default(autoincrement())
  reason  String @unique
  quiz    Quiz  @relation(fields: [quizId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quizId  Int
}

model Info {
  id      Int    @id @default(0)
  title   String @unique
  description String @unique
}

